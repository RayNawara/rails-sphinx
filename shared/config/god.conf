require File.join(File.dirname(__FILE__), "generic-god-monitoring.rb")
include GenericMonitoring

SPHINX_PID_DEVELOPMENT = "/Users/dave/Sites/global-authority/tmp/pids/sphinx.pid"
SPHINX_PID_PRODUCTION  = "/var/www/mbadiamond/shared/pids/sphinx.pid"

# Sphinx
God.watch do |w|
  w.name          = "sphinx"
  w.group         = "mbadiamond"
  w.uid           = "globalauth"
  w.gid           = "globalauth"
  w.interval      = 1.minute
  w.start         = "rake -f /var/www/mbadiamond/current/Rakefile ts:start"
  w.stop          = "rake -f /var/www/mbadiamond/current/Rakefile ts:stop"
  w.start_grace   = 20.seconds
  w.stop_grace    = 15.seconds
  w.pid_file      = ENV["RAILS_ENV"] ? SPHINX_PID_DEVELOPMENT : SPHINX_PID_PRODUCTION
  w.env = { "RAILS_ENV" => "production" } 

  w.behavior(:clean_pid_file)

  generic_monitoring(w, :cpu_limit => 75.percent, :memory_limit => 256.megabytes)
end

# Thinking Sphinx Delayed Job
God.watch do |w|
  w.name     = "delayed-job"
  w.group    = "mbadiamond"
  w.uid      = "globalauth"
  w.gid      = "globalauth"
  w.interval = 1.minute
  w.env = { "RAILS_ENV" => "production" } 
  w.start    = "rake -f /var/www/mbadiamond/current/Rakefile jobs:work >> /var/www/mbadiamond/shared/log/delayed_job.log 2>&1"

  generic_monitoring(w, :cpu_limit => 40.percent, :memory_limit => 256.megabytes)
end

# Thinking Sphinx ScanUploadWatcher
# God.watch do |w|
#   w.name     = "scanuploadwatch"
#   w.group    = "mbadiamond"
#   w.uid      = "globalauth"
#   w.gid      = "globalauth"
#   w.interval = 1.minute
#   w.env = { "RAILS_ENV" => "production" } 
#   w.start    = "rake -f /var/www/globalauth/current/Rakefile suw:start >> /var/www/globalauth/shared/log/scan_upload_watcher.log 2>&1"
#   w.stop     = "rake -f /var/www/globalauth/current/Rakefile suw:stop"
#   w.start_grace = 20.seconds
#   w.stop_grace  = 15.seconds
# 
#   generic_monitoring(w, :cpu_limit => 40.percent, :memory_limit => 256.megabytes)
# end
